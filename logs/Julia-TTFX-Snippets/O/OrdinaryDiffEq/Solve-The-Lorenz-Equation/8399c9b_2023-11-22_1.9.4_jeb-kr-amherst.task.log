ERROR: LoadError: TypeError: in setfield!, expected LinearAlgebra.QRPivoted{Float32, Matrix{Float32}, Vector{Float32}, Vector{Int64}}, got a value of type LinearAlgebra.QRCompactWY{Float32, Matrix{Float32}, Matrix{Float32}}
Stacktrace:
  [1] setproperty!
    @ /workdir/depot/packages/LinearSolve/binjx/src/common.jl:93 [inlined]
  [2] macro expansion
    @ /workdir/depot/packages/LinearSolve/binjx/src/LinearSolve.jl:132 [inlined]
  [3] solve!(cache::LinearSolve.LinearCache{Matrix{Float32}, Vector{Float32}, Vector{Float32}, SciMLBase.NullParameters, LinearSolve.DefaultLinearSolver, LinearSolve.DefaultLinearSolverInit{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, LinearAlgebra.QRPivoted{Float32, Matrix{Float32}, Vector{Float32}, Vector{Int64}}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Vector{Int64}}, Nothing, Nothing, Nothing, LinearAlgebra.SVD{Float32, Float32, Matrix{Float32}, Vector{Float32}}, LinearAlgebra.Cholesky{Float32, Matrix{Float32}}, LinearAlgebra.Cholesky{Float32, Matrix{Float32}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int32}}, Base.RefValue{Int32}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Base.RefValue{Int64}}, LinearAlgebra.QRPivoted{Float32, Matrix{Float32}, Vector{Float32}, Vector{Int64}}}, LinearSolve.InvPreconditioner{LinearAlgebra.Diagonal{Float32, Vector{Float32}}}, LinearAlgebra.Diagonal{Float32, Vector{Float32}}, Float32, Bool}, alg::LinearSolve.QRFactorization{LinearAlgebra.NoPivot}; kwargs::Base.Pairs{Symbol, Float32, Tuple{Symbol}, NamedTuple{(:reltol,), Tuple{Float32}}})
    @ LinearSolve /workdir/depot/packages/LinearSolve/binjx/src/LinearSolve.jl:127
  [4] solve!
    @ /workdir/depot/packages/LinearSolve/binjx/src/LinearSolve.jl:127 [inlined]
  [5] macro expansion
    @ /workdir/depot/packages/LinearSolve/binjx/src/default.jl:334 [inlined]
  [6] solve!(::LinearSolve.LinearCache{Matrix{Float32}, Vector{Float32}, Vector{Float32}, SciMLBase.NullParameters, LinearSolve.DefaultLinearSolver, LinearSolve.DefaultLinearSolverInit{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, LinearAlgebra.QRPivoted{Float32, Matrix{Float32}, Vector{Float32}, Vector{Int64}}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Vector{Int64}}, Nothing, Nothing, Nothing, LinearAlgebra.SVD{Float32, Float32, Matrix{Float32}, Vector{Float32}}, LinearAlgebra.Cholesky{Float32, Matrix{Float32}}, LinearAlgebra.Cholesky{Float32, Matrix{Float32}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int32}}, Base.RefValue{Int32}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Base.RefValue{Int64}}, LinearAlgebra.QRPivoted{Float32, Matrix{Float32}, Vector{Float32}, Vector{Int64}}}, LinearSolve.InvPreconditioner{LinearAlgebra.Diagonal{Float32, Vector{Float32}}}, LinearAlgebra.Diagonal{Float32, Vector{Float32}}, Float32, Bool}, ::LinearSolve.DefaultLinearSolver; assump::LinearSolve.OperatorAssumptions{Nothing}, kwargs::Base.Pairs{Symbol, Float32, Tuple{Symbol}, NamedTuple{(:reltol,), Tuple{Float32}}})
    @ LinearSolve /workdir/depot/packages/LinearSolve/binjx/src/default.jl:327
  [7] solve!
    @ /workdir/depot/packages/LinearSolve/binjx/src/default.jl:327 [inlined]
  [8] #solve!#6
    @ /workdir/depot/packages/LinearSolve/binjx/src/common.jl:209 [inlined]
  [9] solve!
    @ /workdir/depot/packages/LinearSolve/binjx/src/common.jl:208 [inlined]
 [10] #dolinsolve#5
    @ /workdir/depot/packages/NonlinearSolve/JS9El/src/utils.jl:105 [inlined]
 [11] dolinsolve
    @ /workdir/depot/packages/NonlinearSolve/JS9El/src/utils.jl:84 [inlined]
 [12] perform_step!(cache::NonlinearSolve.LevenbergMarquardtCache{false, true, SciMLBase.NonlinearFunction{false, SciMLBase.FullSpecialize, NonlinearSolve.var"#123#134", LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED_NO_TIME), Nothing, Nothing, Nothing}, NonlinearSolve.LevenbergMarquardt{nothing, ADTypes.AutoForwardDiff{nothing, ForwardDiff.Tag{NonlinearSolve.NonlinearSolveTag, Float32}}, Float64, Nothing, typeof(NonlinearSolve.DEFAULT_PRECS)}, Vector{Float32}, Vector{Float32}, Vector{Float32}, Vector{Float32}, Vector{Float32}, Float32, SciMLBase.JacobianWrapper{false, SciMLBase.NonlinearFunction{false, SciMLBase.FullSpecialize, NonlinearSolve.var"#123#134", LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED_NO_TIME), Nothing, Nothing, Nothing}, Float32}, LinearSolve.LinearCache{Matrix{Float32}, Vector{Float32}, Vector{Float32}, SciMLBase.NullParameters, LinearSolve.DefaultLinearSolver, LinearSolve.DefaultLinearSolverInit{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, LinearAlgebra.QRPivoted{Float32, Matrix{Float32}, Vector{Float32}, Vector{Int64}}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Vector{Int64}}, Nothing, Nothing, Nothing, LinearAlgebra.SVD{Float32, Float32, Matrix{Float32}, Vector{Float32}}, LinearAlgebra.Cholesky{Float32, Matrix{Float32}}, LinearAlgebra.Cholesky{Float32, Matrix{Float32}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int32}}, Base.RefValue{Int32}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Base.RefValue{Int64}}, LinearAlgebra.QRPivoted{Float32, Matrix{Float32}, Vector{Float32}, Vector{Int64}}}, LinearSolve.InvPreconditioner{LinearAlgebra.Diagonal{Float32, Vector{Float32}}}, LinearAlgebra.Diagonal{Float32, Vector{Float32}}, Float32, Bool}, Matrix{Float32}, SparseDiffTools.ForwardDiffJacobianCache{SparseDiffTools.NoMatrixColoring, ForwardDiff.JacobianConfig{ForwardDiff.Tag{NonlinearSolve.NonlinearSolveTag, Float32}, Float32, 1, Vector{ForwardDiff.Dual{ForwardDiff.Tag{NonlinearSolve.NonlinearSolveTag, Float32}, Float32, 1}}}, Nothing, Vector{Float32}, Vector{Float32}}, typeof(DiffEqBase.NONLINEARSOLVE_DEFAULT_NORM), Float32, Float32, SciMLBase.NonlinearProblem{Vector{Float32}, false, Float32, SciMLBase.NonlinearFunction{false, SciMLBase.FullSpecialize, NonlinearSolve.var"#123#134", LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED_NO_TIME), Nothing, Nothing, Nothing}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardNonlinearProblem}, LinearAlgebra.Diagonal{Float32, Vector{Float32}}, Vector{Float32}, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Vector{Float32}, Vector{Float32}, Vector{Float32}, Vector{Float32}, Float32, Vector{Float32}, Float32, Vector{Float32}, Vector{Float32}, Vector{Float32}, Matrix{Float32}, Vector{Float32}, Matrix{Float32}, DiffEqBase.NonlinearTerminationModeCache{Vector{Float32}, Float32, DiffEqBase.AbsSafeBestTerminationMode{Int64, Int64, Float64}, Float32, Vector{Float32}, Nothing}, Nothing})
    @ NonlinearSolve /workdir/depot/packages/NonlinearSolve/JS9El/src/levenberg.jl:361
 [13] solve!(cache::NonlinearSolve.LevenbergMarquardtCache{false, true, SciMLBase.NonlinearFunction{false, SciMLBase.FullSpecialize, NonlinearSolve.var"#123#134", LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED_NO_TIME), Nothing, Nothing, Nothing}, NonlinearSolve.LevenbergMarquardt{nothing, ADTypes.AutoForwardDiff{nothing, ForwardDiff.Tag{NonlinearSolve.NonlinearSolveTag, Float32}}, Float64, Nothing, typeof(NonlinearSolve.DEFAULT_PRECS)}, Vector{Float32}, Vector{Float32}, Vector{Float32}, Vector{Float32}, Vector{Float32}, Float32, SciMLBase.JacobianWrapper{false, SciMLBase.NonlinearFunction{false, SciMLBase.FullSpecialize, NonlinearSolve.var"#123#134", LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED_NO_TIME), Nothing, Nothing, Nothing}, Float32}, LinearSolve.LinearCache{Matrix{Float32}, Vector{Float32}, Vector{Float32}, SciMLBase.NullParameters, LinearSolve.DefaultLinearSolver, LinearSolve.DefaultLinearSolverInit{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, LinearAlgebra.QRPivoted{Float32, Matrix{Float32}, Vector{Float32}, Vector{Int64}}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Vector{Int64}}, Nothing, Nothing, Nothing, LinearAlgebra.SVD{Float32, Float32, Matrix{Float32}, Vector{Float32}}, LinearAlgebra.Cholesky{Float32, Matrix{Float32}}, LinearAlgebra.Cholesky{Float32, Matrix{Float32}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int32}}, Base.RefValue{Int32}}, Tuple{LinearAlgebra.LU{Float32, Matrix{Float32}, Vector{Int64}}, Base.RefValue{Int64}}, LinearAlgebra.QRPivoted{Float32, Matrix{Float32}, Vector{Float32}, Vector{Int64}}}, LinearSolve.InvPreconditioner{LinearAlgebra.Diagonal{Float32, Vector{Float32}}}, LinearAlgebra.Diagonal{Float32, Vector{Float32}}, Float32, Bool}, Matrix{Float32}, SparseDiffTools.ForwardDiffJacobianCache{SparseDiffTools.NoMatrixColoring, ForwardDiff.JacobianConfig{ForwardDiff.Tag{NonlinearSolve.NonlinearSolveTag, Float32}, Float32, 1, Vector{ForwardDiff.Dual{ForwardDiff.Tag{NonlinearSolve.NonlinearSolveTag, Float32}, Float32, 1}}}, Nothing, Vector{Float32}, Vector{Float32}}, typeof(DiffEqBase.NONLINEARSOLVE_DEFAULT_NORM), Float32, Float32, SciMLBase.NonlinearProblem{Vector{Float32}, false, Float32, SciMLBase.NonlinearFunction{false, SciMLBase.FullSpecialize, NonlinearSolve.var"#123#134", LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED_NO_TIME), Nothing, Nothing, Nothing}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardNonlinearProblem}, LinearAlgebra.Diagonal{Float32, Vector{Float32}}, Vector{Float32}, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Float32, Vector{Float32}, Vector{Float32}, Vector{Float32}, Vector{Float32}, Float32, Vector{Float32}, Float32, Vector{Float32}, Vector{Float32}, Vector{Float32}, Matrix{Float32}, Vector{Float32}, Matrix{Float32}, DiffEqBase.NonlinearTerminationModeCache{Vector{Float32}, Float32, DiffEqBase.AbsSafeBestTerminationMode{Int64, Int64, Float64}, Float32, Vector{Float32}, Nothing}, Nothing})
    @ NonlinearSolve /workdir/depot/packages/NonlinearSolve/JS9El/src/NonlinearSolve.jl:66
 [14] __solve(::SciMLBase.NonlinearProblem{Vector{Float32}, false, Float32, SciMLBase.NonlinearFunction{false, SciMLBase.FullSpecialize, NonlinearSolve.var"#123#134", LinearAlgebra.UniformScaling{Bool}, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, typeof(SciMLBase.DEFAULT_OBSERVED_NO_TIME), Nothing, Nothing, Nothing}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, SciMLBase.StandardNonlinearProblem}, ::NonlinearSolve.LevenbergMarquardt{nothing, Nothing, Float64, Nothing, typeof(NonlinearSolve.DEFAULT_PRECS)}; kwargs::Base.Pairs{Symbol, Float64, Tuple{Symbol}, NamedTuple{(:abstol,), Tuple{Float64}}})
    @ NonlinearSolve /workdir/depot/packages/NonlinearSolve/JS9El/src/NonlinearSolve.jl:53
 [15] __solve
    @ /workdir/depot/packages/NonlinearSolve/JS9El/src/NonlinearSolve.jl:50 [inlined]
 [16] #solve_call#34
    @ /workdir/depot/packages/DiffEqBase/xlu8p/src/solve.jl:557 [inlined]
 [17] solve_call
    @ /workdir/depot/packages/DiffEqBase/xlu8p/src/solve.jl:523 [inlined]
 [18] #solve_up#42
    @ /workdir/depot/packages/DiffEqBase/xlu8p/src/solve.jl:998 [inlined]
 [19] solve_up
    @ /workdir/depot/packages/DiffEqBase/xlu8p/src/solve.jl:992 [inlined]
 [20] #solve#41
    @ /workdir/depot/packages/DiffEqBase/xlu8p/src/solve.jl:986 [inlined]
 [21] macro expansion
    @ /workdir/depot/packages/NonlinearSolve/JS9El/src/NonlinearSolve.jl:138 [inlined]
 [22] macro expansion
    @ /workdir/depot/packages/PrecompileTools/kmH5L/src/workloads.jl:78 [inlined]
 [23] macro expansion
    @ /workdir/depot/packages/NonlinearSolve/JS9El/src/NonlinearSolve.jl:136 [inlined]
 [24] top-level scope
    @ /workdir/depot/packages/PrecompileTools/kmH5L/src/workloads.jl:140 [inlined]
 [25] top-level scope
    @ /workdir/depot/packages/NonlinearSolve/JS9El/src/NonlinearSolve.jl:0
 [26] include
    @ ./Base.jl:457 [inlined]
 [27] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt128}}, source::String)
    @ Base ./loading.jl:2049
 [28] top-level scope
    @ stdin:3
in expression starting at /workdir/depot/packages/NonlinearSolve/JS9El/src/NonlinearSolve.jl:1
in expression starting at stdin:3
ERROR: LoadError: Failed to precompile NonlinearSolve [8913a72c-1f9b-4ce2-8d82-65094dcecaec] to "/workdir/depot/compiled/v1.9/NonlinearSolve/jl_BfjkGE".
Stacktrace:
  [1] error(s::String)
    @ Base ./error.jl:35
  [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::IO, internal_stdout::IO, keep_loaded_modules::Bool)
    @ Base ./loading.jl:2294
  [3] compilecache
    @ ./loading.jl:2167 [inlined]
  [4] _require(pkg::Base.PkgId, env::String)
    @ Base ./loading.jl:1805
  [5] _require_prelocked(uuidkey::Base.PkgId, env::String)
    @ Base ./loading.jl:1660
  [6] macro expansion
    @ ./loading.jl:1648 [inlined]
  [7] macro expansion
    @ ./lock.jl:267 [inlined]
  [8] require(into::Module, mod::Symbol)
    @ Base ./loading.jl:1611
  [9] include
    @ ./Base.jl:457 [inlined]
 [10] include_package_for_output(pkg::Base.PkgId, input::String, depot_path::Vector{String}, dl_load_path::Vector{String}, load_path::Vector{String}, concrete_deps::Vector{Pair{Base.PkgId, UInt128}}, source::String)
    @ Base ./loading.jl:2049
 [11] top-level scope
    @ stdin:3
in expression starting at /workdir/depot/packages/OrdinaryDiffEq/wz2EI/src/OrdinaryDiffEq.jl:1
in expression starting at stdin:3
ERROR: LoadError: Failed to precompile OrdinaryDiffEq [1dea7af3-3e70-54e6-95c3-0bf5283fa5ed] to "/workdir/depot/compiled/v1.9/OrdinaryDiffEq/jl_jUy05L".
Stacktrace:
 [1] error(s::String)
   @ Base ./error.jl:35
 [2] compilecache(pkg::Base.PkgId, path::String, internal_stderr::IO, internal_stdout::IO, keep_loaded_modules::Bool)
   @ Base ./loading.jl:2294
 [3] compilecache
   @ ./loading.jl:2167 [inlined]
 [4] _require(pkg::Base.PkgId, env::String)
   @ Base ./loading.jl:1805
 [5] _require_prelocked(uuidkey::Base.PkgId, env::String)
   @ Base ./loading.jl:1660
 [6] macro expansion
   @ ./loading.jl:1648 [inlined]
 [7] macro expansion
   @ ./lock.jl:267 [inlined]
 [8] require(into::Module, mod::Symbol)
   @ Base ./loading.jl:1611
in expression starting at /tmp/tmp.4DI5keDokg/Julia-TTFX-Snippets/tasks/O/OrdinaryDiffEq/Solve-The-Lorenz-Equation/task.jl:10
Command exited with non-zero status 1
	Command being timed: "julia +1.9.4 --project=O/OrdinaryDiffEq/Solve-The-Lorenz-Equation O/OrdinaryDiffEq/Solve-The-Lorenz-Equation/task.jl"
	User time (seconds): 18.15
	System time (seconds): 1.23
	Percent of CPU this job got: 101%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:19.03
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 710240
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 328341
	Voluntary context switches: 57
	Involuntary context switches: 135
	Swaps: 0
	File system inputs: 0
	File system outputs: 32
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 1
